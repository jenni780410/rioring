if (WIN32)
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/lib)
endif()

if (CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(LIBNAME rioringd)
else()
    set(LIBNAME rioring)
endif()

if (WIN32)
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /D_DEBUG")
    set(CMAKE_CXX_FLAGS_RELEASE  "${CMAKE_CXX_FLAGS_RELEASE} /DNDEBUG /O2 /Oi /Oy /GL")
    add_definitions(/DWIN32_LEAN_AND_MEAN /DNOMINMAX /D_AMD64_ /D_LIB /D_WIN32_WINNT=0x0A00)
    add_compile_options(/MP)
else()
    add_compile_options(-g -pthread -fthreadsafe-statics -fno-omit-frame-pointer -Wno-format-security)
    set(CMAKE_CXX_FLAGS_DEBUG "-O0 -D_DEBUG")
    set(CMAKE_CXX_FLAGS_RELEASE "-O2 -DNDEBUG")
endif()

file(GLOB_RECURSE SOURCE_FILES LIST_DIRECTORIES false *.cpp)

include_directories(include)
add_library(${LIBNAME} STATIC ${SOURCE_FILES})

if (CMAKE_SYSTEM_NAME MATCHES "Linux")
    set(LIB_PATH ${CMAKE_INSTALL_PREFIX}/lib)
    set(INCLUDE_PATH ${CMAKE_INSTALL_PREFIX}/include)
    set(MAIN_HEADER_FILE ./include/rioring.h)
    set(CONTENT_HEADER_FILES include/rioring)

    install(TARGETS ${LIBNAME} ARCHIVE DESTINATION ${LIB_PATH})
    install(DIRECTORY ${CONTENT_HEADER_FILES} DESTINATION ${INCLUDE_PATH})
    install(FILES ${MAIN_HEADER_FILE} DESTINATION ${INCLUDE_PATH})
endif ()